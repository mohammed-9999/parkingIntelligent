{"ast":null,"code":"var _jsxFileName = \"C:\\\\desctop folder\\\\ENIAD\\\\2EME ANNEE\\\\S4\\\\IOT\\\\Projet\\\\Parking_intellegent\\\\frontend\\\\src\\\\components\\\\ParkingSpot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Text, Badge, VStack, Button, useToast } from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MotionBox = motion(Box);\n_c = MotionBox;\nfunction ParkingSpot({\n  id,\n  status,\n  lastUpdate\n}) {\n  _s();\n  const [isReserved, setIsReserved] = useState(false);\n  const statusColor = status === 'libre' ? 'green' : 'red';\n  const toast = useToast();\n\n  // Formater la date de dernière mise à jour\n  const formatLastUpdate = date => {\n    if (!date) return '';\n    const updateDate = new Date(date);\n    return updateDate.toLocaleTimeString();\n  };\n  const handleReservation = async () => {\n    if (status === 'libre' && !isReserved) {\n      try {\n        const response = await fetch('http://localhost:3001/api/reserve', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            spotId: id,\n            action: 'reserve'\n          })\n        });\n        if (response.ok) {\n          setIsReserved(true);\n          toast({\n            title: 'Réservation confirmée',\n            description: `La place ${id} a été réservée avec succès`,\n            status: 'success',\n            duration: 3000,\n            isClosable: true\n          });\n        } else {\n          throw new Error('Erreur lors de la réservation');\n        }\n      } catch (error) {\n        toast({\n          title: 'Erreur',\n          description: 'Impossible de réserver la place',\n          status: 'error',\n          duration: 3000,\n          isClosable: true\n        });\n      }\n    }\n  };\n  const handleCancelReservation = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/reserve', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          spotId: id,\n          action: 'cancel'\n        })\n      });\n      if (response.ok) {\n        setIsReserved(false);\n        toast({\n          title: 'Réservation annulée',\n          description: `La réservation de la place ${id} a été annulée`,\n          status: 'info',\n          duration: 3000,\n          isClosable: true\n        });\n      } else {\n        throw new Error('Erreur lors de l\\'annulation');\n      }\n    } catch (error) {\n      toast({\n        title: 'Erreur',\n        description: 'Impossible d\\'annuler la réservation',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MotionBox, {\n    p: 4,\n    borderWidth: \"1px\",\n    borderRadius: \"lg\",\n    bg: \"white\",\n    boxShadow: \"sm\",\n    _hover: {\n      boxShadow: 'md'\n    },\n    initial: {\n      opacity: 0,\n      y: 20\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    transition: {\n      duration: 0.3\n    },\n    whileHover: {\n      scale: 1.02\n    },\n    whileTap: {\n      scale: 0.98\n    },\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: \"bold\",\n        children: [\"Place \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n        colorScheme: statusColor,\n        px: 2,\n        py: 1,\n        borderRadius: \"full\",\n        fontSize: \"sm\",\n        children: status.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"xs\",\n        color: \"gray.500\",\n        children: [\"Derni\\xE8re mise \\xE0 jour: \", formatLastUpdate(lastUpdate)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), isReserved ? /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"red\",\n        size: \"sm\",\n        width: \"full\",\n        onClick: handleCancelReservation,\n        children: \"Annuler la r\\xE9servation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        size: \"sm\",\n        width: \"full\",\n        onClick: handleReservation,\n        isDisabled: status === 'occupé',\n        children: \"R\\xE9server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(ParkingSpot, \"qcMtjnzfHsqVKuzlfjFGzq6dlG0=\", false, function () {\n  return [useToast];\n});\n_c2 = ParkingSpot;\nexport default ParkingSpot;\nvar _c, _c2;\n$RefreshReg$(_c, \"MotionBox\");\n$RefreshReg$(_c2, \"ParkingSpot\");","map":{"version":3,"names":["React","useState","Box","Text","Badge","VStack","Button","useToast","motion","jsxDEV","_jsxDEV","MotionBox","_c","ParkingSpot","id","status","lastUpdate","_s","isReserved","setIsReserved","statusColor","toast","formatLastUpdate","date","updateDate","Date","toLocaleTimeString","handleReservation","response","fetch","method","headers","body","JSON","stringify","spotId","action","ok","title","description","duration","isClosable","Error","error","handleCancelReservation","p","borderWidth","borderRadius","bg","boxShadow","_hover","initial","opacity","y","animate","transition","whileHover","scale","whileTap","children","spacing","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","colorScheme","px","py","fontSize","toUpperCase","color","size","width","onClick","isDisabled","_c2","$RefreshReg$"],"sources":["C:/desctop folder/ENIAD/2EME ANNEE/S4/IOT/Projet/Parking_intellegent/frontend/src/components/ParkingSpot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Text, Badge, VStack, Button, useToast } from '@chakra-ui/react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst MotionBox = motion(Box);\r\n\r\nfunction ParkingSpot({ id, status, lastUpdate }) {\r\n  const [isReserved, setIsReserved] = useState(false);\r\n  const statusColor = status === 'libre' ? 'green' : 'red';\r\n  const toast = useToast();\r\n\r\n  // Formater la date de dernière mise à jour\r\n  const formatLastUpdate = (date) => {\r\n    if (!date) return '';\r\n    const updateDate = new Date(date);\r\n    return updateDate.toLocaleTimeString();\r\n  };\r\n\r\n  const handleReservation = async () => {\r\n    if (status === 'libre' && !isReserved) {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/api/reserve', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            spotId: id,\r\n            action: 'reserve'\r\n          }),\r\n        });\r\n\r\n        if (response.ok) {\r\n          setIsReserved(true);\r\n          toast({\r\n            title: 'Réservation confirmée',\r\n            description: `La place ${id} a été réservée avec succès`,\r\n            status: 'success',\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n        } else {\r\n          throw new Error('Erreur lors de la réservation');\r\n        }\r\n      } catch (error) {\r\n        toast({\r\n          title: 'Erreur',\r\n          description: 'Impossible de réserver la place',\r\n          status: 'error',\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCancelReservation = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/reserve', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          spotId: id,\r\n          action: 'cancel'\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setIsReserved(false);\r\n        toast({\r\n          title: 'Réservation annulée',\r\n          description: `La réservation de la place ${id} a été annulée`,\r\n          status: 'info',\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n      } else {\r\n        throw new Error('Erreur lors de l\\'annulation');\r\n      }\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Erreur',\r\n        description: 'Impossible d\\'annuler la réservation',\r\n        status: 'error',\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MotionBox\r\n      p={4}\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"lg\"\r\n      bg=\"white\"\r\n      boxShadow=\"sm\"\r\n      _hover={{ boxShadow: 'md' }}\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.3 }}\r\n      whileHover={{ scale: 1.02 }}\r\n      whileTap={{ scale: 0.98 }}\r\n    >\r\n      <VStack spacing={3}>\r\n        <Text fontWeight=\"bold\">Place {id}</Text>\r\n        <Badge\r\n          colorScheme={statusColor}\r\n          px={2}\r\n          py={1}\r\n          borderRadius=\"full\"\r\n          fontSize=\"sm\"\r\n        >\r\n          {status.toUpperCase()}\r\n        </Badge>\r\n        <Text fontSize=\"xs\" color=\"gray.500\">\r\n          Dernière mise à jour: {formatLastUpdate(lastUpdate)}\r\n        </Text>\r\n        \r\n        {isReserved ? (\r\n          <Button\r\n            colorScheme=\"red\"\r\n            size=\"sm\"\r\n            width=\"full\"\r\n            onClick={handleCancelReservation}\r\n          >\r\n            Annuler la réservation\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            colorScheme=\"blue\"\r\n            size=\"sm\"\r\n            width=\"full\"\r\n            onClick={handleReservation}\r\n            isDisabled={status === 'occupé'}\r\n          >\r\n            Réserver\r\n          </Button>\r\n        )}\r\n      </VStack>\r\n    </MotionBox>\r\n  );\r\n}\r\n\r\nexport default ParkingSpot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}