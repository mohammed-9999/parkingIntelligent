{"ast":null,"code":"var _jsxFileName = \"C:\\\\desctop folder\\\\ENIAD\\\\2EME ANNEE\\\\S4\\\\IOT\\\\Projet\\\\Parking_intellegent\\\\frontend\\\\src\\\\components\\\\NotificationConfig.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Heading, FormControl, FormLabel, Input, Button, VStack, useToast, Switch, Text } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotificationConfig() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [isSubscribed, setIsSubscribed] = useState(false);\n  const toast = useToast();\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Ici, vous pouvez ajouter la logique pour envoyer les données au backend\n    toast({\n      title: isSubscribed ? 'Désabonnement réussi' : 'Abonnement réussi',\n      description: `Les notifications seront ${isSubscribed ? 'désactivées' : 'envoyées'} à ${email}`,\n      status: 'success',\n      duration: 5000,\n      isClosable: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 6,\n    bg: \"white\",\n    borderRadius: \"lg\",\n    boxShadow: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h2\",\n      size: \"lg\",\n      mb: 6,\n      children: \"Configuration des Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 4,\n        align: \"stretch\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Adresse Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"votre@email.com\",\n            isRequired: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          display: \"flex\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            mb: \"0\",\n            children: \"Activer les notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            isChecked: isSubscribed,\n            onChange: e => setIsSubscribed(e.target.checked),\n            colorScheme: \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"sm\",\n          color: \"gray.600\",\n          children: \"Vous recevrez des notifications par email lorsque le statut des places de parking changera.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          colorScheme: \"blue\",\n          size: \"lg\",\n          width: \"full\",\n          children: isSubscribed ? 'Se désabonner' : 'S\\'abonner'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(NotificationConfig, \"hhEhlR7zFVV5y76wfTm+PNzQk98=\", false, function () {\n  return [useToast];\n});\n_c = NotificationConfig;\nexport default NotificationConfig;\nvar _c;\n$RefreshReg$(_c, \"NotificationConfig\");","map":{"version":3,"names":["React","useState","Box","Heading","FormControl","FormLabel","Input","Button","VStack","useToast","Switch","Text","jsxDEV","_jsxDEV","NotificationConfig","_s","email","setEmail","isSubscribed","setIsSubscribed","toast","handleSubmit","e","preventDefault","title","description","status","duration","isClosable","p","bg","borderRadius","boxShadow","children","as","size","mb","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","spacing","align","type","value","onChange","target","placeholder","isRequired","display","alignItems","isChecked","checked","colorScheme","fontSize","color","width","_c","$RefreshReg$"],"sources":["C:/desctop folder/ENIAD/2EME ANNEE/S4/IOT/Projet/Parking_intellegent/frontend/src/components/NotificationConfig.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  VStack,\n  useToast,\n  Switch,\n  Text,\n} from '@chakra-ui/react';\n\nfunction NotificationConfig() {\n  const [email, setEmail] = useState('');\n  const [isSubscribed, setIsSubscribed] = useState(false);\n  const toast = useToast();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Ici, vous pouvez ajouter la logique pour envoyer les données au backend\n    toast({\n      title: isSubscribed ? 'Désabonnement réussi' : 'Abonnement réussi',\n      description: `Les notifications seront ${isSubscribed ? 'désactivées' : 'envoyées'} à ${email}`,\n      status: 'success',\n      duration: 5000,\n      isClosable: true,\n    });\n  };\n\n  return (\n    <Box p={6} bg=\"white\" borderRadius=\"lg\" boxShadow=\"sm\">\n      <Heading as=\"h2\" size=\"lg\" mb={6}>\n        Configuration des Notifications\n      </Heading>\n      \n      <form onSubmit={handleSubmit}>\n        <VStack spacing={4} align=\"stretch\">\n          <FormControl>\n            <FormLabel>Adresse Email</FormLabel>\n            <Input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"votre@email.com\"\n              isRequired\n            />\n          </FormControl>\n\n          <FormControl display=\"flex\" alignItems=\"center\">\n            <FormLabel mb=\"0\">\n              Activer les notifications\n            </FormLabel>\n            <Switch\n              isChecked={isSubscribed}\n              onChange={(e) => setIsSubscribed(e.target.checked)}\n              colorScheme=\"blue\"\n            />\n          </FormControl>\n\n          <Text fontSize=\"sm\" color=\"gray.600\">\n            Vous recevrez des notifications par email lorsque le statut des places de parking changera.\n          </Text>\n\n          <Button\n            type=\"submit\"\n            colorScheme=\"blue\"\n            size=\"lg\"\n            width=\"full\"\n          >\n            {isSubscribed ? 'Se désabonner' : 'S\\'abonner'}\n          </Button>\n        </VStack>\n      </form>\n    </Box>\n  );\n}\n\nexport default NotificationConfig; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}