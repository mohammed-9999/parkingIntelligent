{"ast":null,"code":"var _jsxFileName = \"C:\\\\desctop folder\\\\ENIAD\\\\2EME ANNEE\\\\S4\\\\IOT\\\\Projet\\\\Parking_intellegent\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport { ChakraProvider, Box, Heading, Container, SimpleGrid } from '@chakra-ui/react';\nimport ParkingSpot from './components/ParkingSpot';\nimport NotificationConfig from './components/NotificationConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const parkingSpots = [{\n    id: 1,\n    status: 'libre'\n  }, {\n    id: 2,\n    status: 'occupé'\n  }, {\n    id: 3,\n    status: 'libre'\n  }, {\n    id: 4,\n    status: 'occupé'\n  }, {\n    id: 5,\n    status: 'libre'\n  }, {\n    id: 6,\n    status: 'libre'\n  }];\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      minH: \"100vh\",\n      bg: \"gray.50\",\n      py: 8,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxW: \"container.xl\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h1\",\n          textAlign: \"center\",\n          mb: 8,\n          color: \"blue.600\",\n          children: \"Parking Intelligent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          columns: {\n            base: 1,\n            md: 2\n          },\n          spacing: 8,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              as: \"h2\",\n              size: \"lg\",\n              mb: 4,\n              children: \"Places de Parking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n              columns: {\n                base: 2,\n                md: 3\n              },\n              spacing: 4,\n              children: parkingSpots.map(spot => /*#__PURE__*/_jsxDEV(ParkingSpot, {\n                id: spot.id,\n                status: spot.status\n              }, spot.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(NotificationConfig, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ChakraProvider","Box","Heading","Container","SimpleGrid","ParkingSpot","NotificationConfig","jsxDEV","_jsxDEV","App","parkingSpots","id","status","children","minH","bg","py","maxW","as","textAlign","mb","color","fileName","_jsxFileName","lineNumber","columnNumber","columns","base","md","spacing","size","map","spot","_c","$RefreshReg$"],"sources":["C:/desctop folder/ENIAD/2EME ANNEE/S4/IOT/Projet/Parking_intellegent/frontend/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { ChakraProvider, Box, Heading, Container, SimpleGrid } from '@chakra-ui/react';\r\nimport ParkingSpot from './components/ParkingSpot';\r\nimport NotificationConfig from './components/NotificationConfig';\r\n\r\nfunction App() {\r\n  const parkingSpots = [\r\n    { id: 1, status: 'libre' },\r\n    { id: 2, status: 'occupé' },\r\n    { id: 3, status: 'libre' },\r\n    { id: 4, status: 'occupé' },\r\n    { id: 5, status: 'libre' },\r\n    { id: 6, status: 'libre' },\r\n  ];\r\n\r\n  return (\r\n    <ChakraProvider>\r\n      <Box minH=\"100vh\" bg=\"gray.50\" py={8}>\r\n        <Container maxW=\"container.xl\">\r\n          <Heading as=\"h1\" textAlign=\"center\" mb={8} color=\"blue.600\">\r\n            Parking Intelligent\r\n          </Heading>\r\n          \r\n          <SimpleGrid columns={{ base: 1, md: 2 }} spacing={8}>\r\n            <Box>\r\n              <Heading as=\"h2\" size=\"lg\" mb={4}>\r\n                Places de Parking\r\n              </Heading>\r\n              <SimpleGrid columns={{ base: 2, md: 3 }} spacing={4}>\r\n                {parkingSpots.map((spot) => (\r\n                  <ParkingSpot key={spot.id} id={spot.id} status={spot.status} />\r\n                ))}\r\n              </SimpleGrid>\r\n            </Box>\r\n            \r\n            <Box>\r\n              <NotificationConfig />\r\n            </Box>\r\n          </SimpleGrid>\r\n        </Container>\r\n      </Box>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}