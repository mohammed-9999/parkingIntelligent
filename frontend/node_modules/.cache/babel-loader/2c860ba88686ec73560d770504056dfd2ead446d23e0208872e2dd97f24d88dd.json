{"ast":null,"code":"var _jsxFileName = \"C:\\\\desctop folder\\\\ENIAD\\\\2EME ANNEE\\\\S4\\\\IOT\\\\Projet\\\\Parking_intellegent\\\\frontend\\\\src\\\\components\\\\ParkingSpot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Text, Badge, VStack, Button, useToast } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParkingSpot({\n  id,\n  status\n}) {\n  _s();\n  const [isReserved, setIsReserved] = useState(false);\n  const statusColor = status === 'libre' ? 'green' : 'red';\n  const toast = useToast();\n  const handleReservation = () => {\n    if (status === 'libre' && !isReserved) {\n      setIsReserved(true);\n      toast({\n        title: 'Réservation confirmée',\n        description: `La place ${id} a été réservée avec succès`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n  const handleCancelReservation = () => {\n    setIsReserved(false);\n    toast({\n      title: 'Réservation annulée',\n      description: `La réservation de la place ${id} a été annulée`,\n      status: 'info',\n      duration: 3000,\n      isClosable: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 4,\n    borderWidth: \"1px\",\n    borderRadius: \"lg\",\n    bg: \"white\",\n    boxShadow: \"sm\",\n    _hover: {\n      boxShadow: 'md'\n    },\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: \"bold\",\n        children: [\"Place \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n        colorScheme: statusColor,\n        px: 2,\n        py: 1,\n        borderRadius: \"full\",\n        fontSize: \"sm\",\n        children: status.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), isReserved ? /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"red\",\n        size: \"sm\",\n        width: \"full\",\n        onClick: handleCancelReservation,\n        children: \"Annuler la r\\xE9servation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        size: \"sm\",\n        width: \"full\",\n        onClick: handleReservation,\n        isDisabled: status === 'occupé',\n        children: \"R\\xE9server\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(ParkingSpot, \"qcMtjnzfHsqVKuzlfjFGzq6dlG0=\", false, function () {\n  return [useToast];\n});\n_c = ParkingSpot;\nexport default ParkingSpot;\nvar _c;\n$RefreshReg$(_c, \"ParkingSpot\");","map":{"version":3,"names":["React","useState","Box","Text","Badge","VStack","Button","useToast","jsxDEV","_jsxDEV","ParkingSpot","id","status","_s","isReserved","setIsReserved","statusColor","toast","handleReservation","title","description","duration","isClosable","handleCancelReservation","p","borderWidth","borderRadius","bg","boxShadow","_hover","children","spacing","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","colorScheme","px","py","fontSize","toUpperCase","size","width","onClick","isDisabled","_c","$RefreshReg$"],"sources":["C:/desctop folder/ENIAD/2EME ANNEE/S4/IOT/Projet/Parking_intellegent/frontend/src/components/ParkingSpot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Text, Badge, VStack, Button, useToast } from '@chakra-ui/react';\r\n\r\nfunction ParkingSpot({ id, status }) {\r\n  const [isReserved, setIsReserved] = useState(false);\r\n  const statusColor = status === 'libre' ? 'green' : 'red';\r\n  const toast = useToast();\r\n\r\n  const handleReservation = () => {\r\n    if (status === 'libre' && !isReserved) {\r\n      setIsReserved(true);\r\n      toast({\r\n        title: 'Réservation confirmée',\r\n        description: `La place ${id} a été réservée avec succès`,\r\n        status: 'success',\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCancelReservation = () => {\r\n    setIsReserved(false);\r\n    toast({\r\n      title: 'Réservation annulée',\r\n      description: `La réservation de la place ${id} a été annulée`,\r\n      status: 'info',\r\n      duration: 3000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      p={4}\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"lg\"\r\n      bg=\"white\"\r\n      boxShadow=\"sm\"\r\n      _hover={{ boxShadow: 'md' }}\r\n    >\r\n      <VStack spacing={3}>\r\n        <Text fontWeight=\"bold\">Place {id}</Text>\r\n        <Badge\r\n          colorScheme={statusColor}\r\n          px={2}\r\n          py={1}\r\n          borderRadius=\"full\"\r\n          fontSize=\"sm\"\r\n        >\r\n          {status.toUpperCase()}\r\n        </Badge>\r\n        \r\n        {isReserved ? (\r\n          <Button\r\n            colorScheme=\"red\"\r\n            size=\"sm\"\r\n            width=\"full\"\r\n            onClick={handleCancelReservation}\r\n          >\r\n            Annuler la réservation\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            colorScheme=\"blue\"\r\n            size=\"sm\"\r\n            width=\"full\"\r\n            onClick={handleReservation}\r\n            isDisabled={status === 'occupé'}\r\n          >\r\n            Réserver\r\n          </Button>\r\n        )}\r\n      </VStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ParkingSpot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}